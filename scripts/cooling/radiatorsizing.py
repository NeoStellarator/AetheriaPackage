import os
import sys
import pathlib as pl
import scipy.optimize


sys.path.append(str(list(pl.Path(__file__).parents)[2]))
os.chdir(str(list(pl.Path(__file__).parents)[2]))

from input.data_structures import Battery, FuelCell
from input.data_structures.fluid import Fluid
from modules.cooling.coolingsystem import Coolingsystem


#constants
T_air = 40 #celsius
T_h_in = 85
heat_transfer_coefficient_exchanger = 1500


#designs parameters
area_inlet = 1  #m^2
air_speed = 300/3.6

Area_heat_exchanger = 1 #m^2
mass_flow_hot = 3 # kg/s

# initialising 
bat = Battery(Efficiency= 0.9)
fc = FuelCell()
fc.load()
water = Fluid(viscosity = 8.9e-4, thermal_conductivity = 0.600, heat_capacity = 4184, density=1.225)
air = Fluid(heat_capacity=1005, density= 1.225)




#calculating heat
heatbattery = bat.heat(power= 520e3)
heatfuelcell = fc.heat(power= 101e3)
totalHeat = heatfuelcell + heatbattery


#knowns 
#mass_flow_hot = heatfuelcell/ water.heat_capacity / (T_max_coolant- T_air)
#T_h_in = heatfuelcell / mass_flow_hot / water.heat_capacity + T_coolant

pfan = Coolingsystem.power_fan_airspeed(air_speed,fan_area= area_inlet  ,density = air.density)
c_hot = water.heat_capacity * mass_flow_hot
c_cold = air.heat_capacity * air.density * area_inlet * air_speed

Q_expelled = Coolingsystem.calculate_heat_expelled(c_hot = c_hot, c_cold = c_cold, 
                                                   T_hot_in = T_h_in, T_cold_in= T_air, 
                                                   heat_transfer_coefficient_exchanger= heat_transfer_coefficient_exchanger, 
                                                   Area_heat_exchanger= Area_heat_exchanger)



massflow_air_hover = air_speed * area_inlet * air.density
pfan = Coolingsystem.power_fan_massflow(massflow_air_hover/3,air.density, 0.2) *3

T_h_out = T_h_in - Q_expelled/ mass_flow_hot /water.heat_capacity
print(pfan/1e3)
print(T_h_out)
print("Heat expelled by the radiator[kW]: ", round(Q_expelled/1000,2))
print("heat generated by fuel cell[kW]: ", round(heatfuelcell/1000,2))
